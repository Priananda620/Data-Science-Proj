start()
start()
apr_data <- read.csv("dataset/uber-raw-data-apr14.csv")
may_data <- read.csv("dataset/uber-raw-data-may14.csv")
jun_data <- read.csv("dataset/uber-raw-data-jun14.csv")
uber_data <- rbind(apr_data, may_data, jun_data)
View(uber_data)
View(uber_data)
clus <- uber_data %>%
group_by(Lat, Lon) %>%
dplyr::summarize()
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(factoextra)
options(dplyr.summarise.inform = FALSE)
apr_data <- read.csv("dataset/uber-raw-data-apr14.csv")
may_data <- read.csv("dataset/uber-raw-data-may14.csv")
jun_data <- read.csv("dataset/uber-raw-data-jun14.csv")
uber_data <- rbind(apr_data, may_data, jun_data)
uber_data$Date.Time <- as.POSIXct(uber_data$Date.Time, format = "%m/%d/%Y %H:%M:%S")
uber_data$Time <- format(uber_data$Date.Time, format="%H:%M:%S")
uber_data$Date.Time <- ymd_hms(uber_data$Date.Time)
uber_data$day <- factor(day(uber_data$Date.Time))
uber_data$month <- factor(month(uber_data$Date.Time, label = TRUE))
uber_data$year <- factor(year(uber_data$Date.Time))
uber_data$dayofweek <- factor(wday(uber_data$Date.Time, label = TRUE))
uber_data$hour <- factor(hour(hms(uber_data$Time)))
uber_data$minute <- factor(minute(hms(uber_data$Time)))
uber_data$second <- factor(second(hms(uber_data$Time)))
clus <- uber_data %>%
group_by(Lat, Lon) %>%
dplyr::summarize()
k2 <- kmeans(clus, centers = 2, nstart = 25)
str(k2)
fviz_cluster(k2, data = clus, main = "Uber Spread by Cluster with 2 Centers")
fviz_cluster(k2, data = clus, main = "Uber Spread by Cluster with 2 Centers")
library(cluster)
fviz_cluster(k2, data = clus, main = "Uber Spread by Cluster with 2 Centers")
tot.withinss <- vector(mode="character", length=10)
plot(1:10, tot.withinss, type="b", pch=19)
ngentot <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(clus, center=i, nstart=25)
ngentot[i] <- irisCluster$ngentot
}
ngentot <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(clus, center=i, nstart=20)
ngentot[i] <- irisCluster$ngentot
}
k2
table(k2$cluster, uber_data$dayofweek)
k2
table(k2$cluster, uber_data$month)
table(k2$cluster, uber_data$month)
k2$cluster
ngentot <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(clus, center=i, nstart=20)
ngentot[i] <- k2$tot.withinss
}
ngen <- k2
ngen.tot <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(clus, center=i, nstart=20)
ngen.tot[i] <- ngen$tot.withinss
}
ngentot
ngen <- k2
ngen.tot <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(clus, center=i, nstart=20)
ngen.tot[i] <- ngen$tot.withinss
}
plot(1:10, ngen.tot, type="b", pch=19)
ngen.tot <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(clus, center=i, nstart=25)
ngen.tot[i] <- ngen$tot.withinss
}
plot(1:10, ngen.tot, type="b", pch=19)
# rmd: let's use k=6 for this case
k2 <- kmeans(clus, centers = 3, nstart = 25)
plot(1:10, ngen.tot, type="b", pch=19)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(DT)
library(factoextra)
options(dplyr.summarise.inform = FALSE)
month_base <-  uber_data %>%
group_by(Base, month) %>%
dplyr::summarize(Total = n())
ggplot(month_base, aes(Base, month, fill = Total)) +
geom_tile(color = "white") +
ggtitle("Heatmap by Month and Bases")
ggplot(uber_data, aes(Base)) +
geom_bar(fill = "darkred") +
scale_y_continuous(labels = scales::comma_format()) +
ggtitle("Trips by Bases")
ggplot(uber_data, aes(Base, fill = month)) +
geom_bar(position = "dodge") +
scale_y_continuous(labels = scales::comma_format()) +
ggtitle("Trips by Month and Bases") +
scale_fill_manual(values = colors)
ggplot(uber_data, aes(Base)) +
geom_bar(fill = "darkred") +
scale_y_continuous(labels = scales::comma_format()) +
ggtitle("Trips by Bases")
ggplot(uber_data, aes(Base, fill = month)) +
geom_bar(position = "dodge") +
scale_y_continuous(labels = scales::comma_format()) +
ggtitle("Trips by Month and Bases") +
scale_fill_manual(values = colors)
# PLOTTING: trips during every day of the month
colors = c("orange", "red", "blue", "green", "purple", "black", "pink")
ggplot(uber_data, aes(Base)) +
geom_bar(fill = "darkred") +
scale_y_continuous(labels = scales::comma_format()) +
ggtitle("Trips by Bases")
ggplot(uber_data, aes(Base, fill = month)) +
geom_bar(position = "dodge") +
scale_y_continuous(labels = scales::comma_format()) +
ggtitle("Trips by Month and Bases") +
scale_fill_manual(values = colors)
colors = c("orange", "red", "blue", "green", "purple", "black", "pink")
ggplot(uber_data, aes(Base)) +
geom_bar(fill = "darkred") +
scale_y_continuous(labels = scales::comma_format()) +
ggtitle("Trips by Bases")
ggplot(uber_data, aes(Base, fill = month)) +
geom_bar(position = "dodge") +
scale_y_continuous(labels = scales::comma_format()) +
ggtitle("Trips by Month and Bases") +
scale_fill_manual(values = colors)
plot(1:10, ngen.tot, type="b", pch=19)
# rmd: let's use k=6 for this case
k2 <- kmeans(clus, centers = 3, nstart = 25)
str(k2)
table(k2$cluster, uber_data$month)
table(k2$cluster, uber_data$base)
table(k2$cluster[:1-5], uber_data$base)
table(k2$cluster[:1-5], uber_data$base)
table(k2$cluster, uber_data$base)
table(k2$cluster[,1:5], uber_data$base)
k2$cluster
table(k2$cluster, uber_data$day)
table(k2$cluster[,1:5], uber_data$day)
table(k2$cluster[,1:5], uber_data$Base)
table(k2$cluster, uber_data$Base)
cluster <- kmeans(clus[,1:4], center=3, nstart=20)
cluster <- kmeans(clus[,1:4], center=3, nstart=20)
cluster <- kmeans(clus, center=3, nstart=20)
table(cluster$cluster, uber_data$Base)
length(uber_data$Base)
uber_data$Base
ngen.tot <- vector(mode="character", length=10)
for (i in 1:10){
irisCluster <- kmeans(clus, center=i, nstart=25)
ngen.tot[i] <- ngen$tot.withinss
}
month_hour <- uber_data %>%
group_by(month, hour) %>%
dplyr::summarize(Total = n())
ggplot(month_hour, aes(hour, Total, fill = month)) +
geom_bar(stat = "identity") +
ggtitle("Trips by Hour and Month") +
scale_y_continuous(labels = scales::comma_format())
month_hour <- uber_data %>%
group_by(month, hour) %>%
dplyr::summarize(Total = n())
ggplot(month_hour, aes(hour, Total, fill = month)) +
geom_bar(stat = "identity") +
ggtitle("Trips by Hour and Month") +
scale_y_continuous(labels = scales::comma_format())
hour_data<-uber_data %>%
group_by(hour) %>%
dplyr::summarize(Total = n())
ggplot(hour_data, aes(hour, Total)) +
geom_bar(stat = "identity", fill = "steelblue", color = "red") +
ggtitle("Trips Every Hour") +
theme(legend.position = "none") +
scale_y_continuous(labels = scales::comma_format())
clus <- uber_data %>%
group_by(Lat, Lon) %>%
dplyr::summarize()
k2 <- kmeans(clus, centers = 2, nstart = 25)
str(k2)
fviz_cluster(k2, data = clus, main = "Uber Spread by Cluster with 2 Centers")
month_group <- uber_data %>%
group_by(month) %>%
dplyr::summarize(Total = n())
ggplot(month_group, aes(month, Total, fill = month)) +
geom_bar( stat = "identity") +
ggtitle("Trips by Month") +
theme(legend.position = "none") +
scale_y_continuous(labels = scales::comma_format()) +
scale_fill_manual(values = colors)
plot(1:10, ngen.tot, type="b", pch=19)
month_weekday <- uber_data %>%
group_by(month, dayofweek) %>%
dplyr::summarize(Total = n())
ggplot(month_weekday, aes(month, Total, fill = dayofweek)) +
geom_bar( stat = "identity", position = "dodge") +
ggtitle("Trips by Day and Month") +
scale_y_continuous(labels = scales::comma_format()) +
scale_fill_manual(values = colors)
month_weekday <- uber_data %>%
group_by(month, dayofweek) %>%
dplyr::summarize(Total = n())
ggplot(month_weekday, aes(month, Total, fill = dayofweek)) +
geom_bar( stat = "identity", position = "dodge") +
ggtitle("Trips by Day and Month") +
scale_y_continuous(labels = scales::comma_format()) +
scale_fill_manual(values = colors)
day_month_group <- uber_data %>%
group_by(month, day) %>%
dplyr::summarize(Total = n())
ggplot(day_month_group, aes(day, Total, fill = month)) +
geom_bar( stat = "identity") +
ggtitle("Trips by Day and Month") +
scale_y_continuous(labels = scales::comma_format()) +
scale_fill_manual(values = colors)
#combine 3 dataset of 3 months
uber_data <- rbind(apr_data, may_data, jun_data)
is.nan(uber_data)
#combine 3 dataset of 3 months
uber_data <- rbind(apr_data, may_data, jun_data)
is.na(uber_data)
# DATA READING
# - downloaded from https://data.fivethirtyeight.com/
apr_data <- read.csv("dataset/uber-raw-data-apr14.csv")
View(apr_data)
View(apr_data)
#combine 3 dataset of 3 months
uber_data <- rbind(apr_data, may_data, jun_data)
which(is.na(uber_data$Date.Time))
which(is.na(uber_data$Lat))
which(is.na(uber_data$Lon))
which(is.na(uber_data$Base))
